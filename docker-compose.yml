version: '3'
services:
  db:
    image: postgres:14.2-alpine
    container_name: food_web_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: 
      - "postgres"
      - "-c"
      - "max_connections=500"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:6.2.0-alpine
    container_name: food_web_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RAILS_ENV=production
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - REDIS_URL=redis://redis:6379/0
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
    volumes:
      - app-storage:/rails/storage
      - ./tmp:/rails/tmp
      - ./log:/rails/log
      - .:/app
      - bundle_cache:/usr/local/bundle
    depends_on:
      - db
      - redis
    ports:
      - "3000:3000"
    restart: unless-stopped

  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RAILS_ENV=production
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - REDIS_URL=redis://redis:6379/0
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    volumes:
      - app-storage:/rails/storage
      - ./tmp:/rails/tmp
      - ./log:/rails/log
      - .:/app
      - bundle_cache:/usr/local/bundle
    restart: unless-stopped

volumes:
  postgres_data: {}
  app-storage: {}
  bundle_cache: {}
